Agregar propiedades (AGREGA LA PROPIEDAD NO MUESTRA CARACTERISTICAS)
Propiedad Comercial (Verificar que funcione correctamente)
Filtros (Agregar varias propiedades de prueba para probar y ver que funcionen)
FALTA LOGO
VERIFICAR PAGO DE GOOGLE

// Aquí está el PropertyStepper original que funcionaba correctamente
const PropertyStepper = ({ onSubmit, onCancel }) => {
    const [activeStep, setActiveStep] = useState(0);
    const [formData, setFormData] = useState({});

    const handleNext = (data) => {
        setFormData((prev) => ({ ...prev, ...data }));
        setActiveStep((prevActiveStep) => prevActiveStep + 1);
    };

    const handleBack = () => {
        setActiveStep((prevActiveStep) => prevActiveStep - 1);
    };

    const handleFinalSubmit = () => {
        onSubmit(formData);
    };

    return (
        <div>
            {activeStep === 0 && <ResidentialForm onNext={handleNext} />}
            {activeStep === 1 && <ComercialForm onNext={handleNext} onBack={handleBack} />}
            {activeStep === 2 && (
                <div>
                    <h2>Confirmar Datos</h2>
                    <pre>{JSON.stringify(formData, null, 2)}</pre>
                    <button onClick={handleBack}>Atrás</button>
                    <button onClick={handleFinalSubmit}>Enviar</button>
                </div>
            )}
        </div>
    );
};

// ResidentialForm corregido
const ResidentialForm = ({ onNext }) => {
    const [data, setData] = useState({
        baños: '',
        habitaciones: '',
        caracteristicas: [],
    });

    const handleChange = (e) => {
        setData({ ...data, [e.target.name]: e.target.value });
    };

    const handleCheckboxChange = (e) => {
        const { name, checked } = e.target;
        setData((prev) => ({
            ...prev,
            caracteristicas: checked
                ? [...prev.caracteristicas, name]
                : prev.caracteristicas.filter((item) => item !== name),
        }));
    };

    const handleSubmit = () => {
        onNext(data);
    };

    return (
        <div>
            <h2>Formulario Residencial</h2>
            <input type="number" name="baños" value={data.baños} onChange={handleChange} placeholder="Baños" />
            <input type="number" name="habitaciones" value={data.habitaciones} onChange={handleChange} placeholder="Habitaciones" />
            <label>
                <input type="checkbox" name="Agua Corriente" onChange={handleCheckboxChange} /> Agua Corriente
            </label>
            <label>
                <input type="checkbox" name="Gas Natural" onChange={handleCheckboxChange} /> Gas Natural
            </label>
            <button onClick={handleSubmit}>Siguiente</button>
        </div>
    );
};

// ComercialForm corregido
const ComercialForm = ({ onNext, onBack }) => {
    const [data, setData] = useState({
        metrosCuadrados: '',
        caracteristicas: [],
    });

    const handleChange = (e) => {
        setData({ ...data, [e.target.name]: e.target.value });
    };

    const handleCheckboxChange = (e) => {
        const { name, checked } = e.target;
        setData((prev) => ({
            ...prev,
            caracteristicas: checked
                ? [...prev.caracteristicas, name]
                : prev.caracteristicas.filter((item) => item !== name),
        }));
    };

    const handleSubmit = () => {
        onNext(data);
    };

    return (
        <div>
            <h2>Formulario Comercial</h2>
            <input type="number" name="metrosCuadrados" value={data.metrosCuadrados} onChange={handleChange} placeholder="Metros Cuadrados" />
            <label>
                <input type="checkbox" name="Internet" onChange={handleCheckboxChange} /> Internet
            </label>
            <label>
                <input type="checkbox" name="Electricidad" onChange={handleCheckboxChange} /> Electricidad
            </label>
            <button onClick={onBack}>Atrás</button>
            <button onClick={handleSubmit}>Siguiente</button>
        </div>
    );
};
